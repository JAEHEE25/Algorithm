# [G4] 녹색 옷 입은 애가 젤다지?

### [ 문제 정보 ]
> **백준**: https://www.acmicpc.net/problem/4485
> 
> **난이도**: 2
>
> **유형**: #그래프


### [ 문제 풀이 ]
```Java
import java.io.*;
import java.util.*;

public class Main {
	static int[][] cave;
	static int[][] dist;
	static int N;
	static int[] dx = {0, 0, 1, -1};
	static int[] dy = {1, -1, 0, 0};
	static int MAX = Integer.MAX_VALUE;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringBuilder sb = new StringBuilder();
		int num = 1;
		while (true) {
			N = Integer.parseInt(br.readLine());
			if (N == 0) break;

			cave = new int[N][N];
			dist = new int[N][N];
			for (int i = 0; i < N; i++) {
				Arrays.fill(dist[i], MAX);
			}

			StringTokenizer st;
			for (int i = 0; i < N; i++) {
				st = new StringTokenizer(br.readLine());
				for (int j = 0; j < N; j++) {
					cave[i][j] = Integer.parseInt(st.nextToken());
				}
			}

			dijkstra();
			sb.append("Problem ").append(num++).append(": ").append(dist[N - 1][N - 1]).append("\n");
		}//while
		System.out.println(sb);
	}//main

	static void dijkstra() {
		Queue<Location> pq = new PriorityQueue<>();
		pq.add(new Location(0, 0, cave[0][0]));
		dist[0][0] = cave[0][0];

		while (!pq.isEmpty()) {
			Location poll = pq.poll();

			for (int i = 0; i < 4; i++) {
				int nx = poll.x + dx[i];
				int ny = poll.y + dy[i];

				if (nx < 0 || nx >= N || ny < 0 || ny >= N || dist[nx][ny] != MAX) {
					continue;
				}

				//현재 노드 최단 거리 + 다음노드 / 다음노드의 최단거리
				int result = dist[poll.x][poll.y] + cave[nx][ny];
				if (result < dist[nx][ny]) {
					dist[nx][ny] = result;
					pq.add(new Location(nx, ny, dist[nx][ny]));
				}
			}
		}
	}

}//class

class Location implements Comparable<Location> {
	int x;
	int y;
	int v;

	Location(int x, int y, int v) {
		this.x = x;
		this.y = y;
		this.v = v;
	}

	@Override
	public int compareTo(Location o) {
		return this.v - o.v;
	}
}
```
다익스트라 풀이<br>-> (현재 노드 최단 거리 + 다음 노드), 다음 노드의 최단거리 비교해서 업데이트


---
@www.codrive.co.kr